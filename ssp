#!/bin/sh
# dependencies: openssl, curl, jq

# TODO: tor 
# TODO: share.riseup.net
# TODO: privnote

set -e
#set -x # DEBUG
set -o pipefail

## Each of these functions takes a message to upload on stdin and outputs its URL on stdout
# Most of them should be one-time and/or encrypted pastebins.

function dpaste {
  #https://dpaste.de - one time pastes (though mostly targetted at programmers)
  note_link=$(curl -s -F 'expires=onetime' -F 'lexer=_text' -F 'content=<-' -F 'format=url' https://dpaste.de/api/)
  curl -s "$note_link" >/dev/null # dpaste's "onetime" notes are actually "twotime" because they assume the first time is for showing the sender
  echo "$note_link"
}

function privnote {
  # https://privnote.com - end-to-end-encrypted, self-destructing notes
  # https://stackoverflow.com/a/46841303
  
  # privnote passwords are 9 base64 digits
  password=$(openssl rand -base64 8 | cut -c 1-9) 

  # TODO: openssl enc complains that
  # > *** WARNING : deprecated key derivation used.
  # > Using -iter or -pbkdf2 would be better.
  # but using those seems to be incompatible with privnote?
  # and you can't seem to specify -md sha256 without breaking it either.
  data=$(cat - | password="$password" openssl enc -e -aes-256-cbc -pass env:password -a -md md5 2>/dev/null)

  # TODO: privnote has started using https://privnote.com/legacy/ as of 2019, which suggests they're changing their algorithm
  note_link=$(curl -s 'https://privnote.com/' \
    -H 'X-Requested-With: XMLHttpRequest' \
    --data-urlencode "data=$data" \
    --data "has_manual_pass=false&duration_hours=0&dont_ask=false&data_type=T&notify_email=&notify_ref=" \
    | tee output | jq -r '.note_link')
  note_link="${note_link}#${password}"
  echo $note_link
}

